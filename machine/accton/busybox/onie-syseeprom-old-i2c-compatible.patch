patch for compatible with old i2c eeprom model

diff --git a/include/onie_tlvinfo.h b/include/onie_tlvinfo.h
index baa39ab..055cf32 100644
--- a/include/onie_tlvinfo.h
+++ b/include/onie_tlvinfo.h
@@ -172,3 +172,7 @@ bool tlvinfo_delete_tlv(u_int8_t * eeprom, u_int8_t code);
 bool tlvinfo_add_tlv(u_int8_t * eeprom, int tcode, char * strval);
 bool tlvinfo_decode_tlv(u_int8_t *eeprom, u_int8_t tcode, char* value);
 void show_tlv_code_list(void);
+
+#define OLD_SYS_EEPROM_SIZE (256)
+#define OLD_SYS_EEPROM_I2C_ADDR (0x56)
+#define QSFP_ROOT_MUX_ADDR (0x77)
diff --git a/miscutils/sys_eeprom.c b/miscutils/sys_eeprom.c
index a24d6bb..d74a116 100644
--- a/miscutils/sys_eeprom.c
+++ b/miscutils/sys_eeprom.c
@@ -41,6 +41,7 @@ cmd_usage()
     exit(1);
 }
 
+extern void correct_eeprom_i2c_addr(void);
 /*
  *  do_onie_syseeprom
  *  This function implements the onie_syseeprom command.
@@ -78,6 +79,8 @@ int onie_syseeprom_main(int argc, char **argv)
     }
     tokens[tlv_code_count*2] = NULL;
 
+    correct_eeprom_i2c_addr();
+
     while (TRUE) {
 	c = getopt_long(argc, argv, short_options,
 			long_options, &option_index);
diff --git a/miscutils/sys_eeprom_i2c.c b/miscutils/sys_eeprom_i2c.c
index ed3235b..f86b155 100644
--- a/miscutils/sys_eeprom_i2c.c
+++ b/miscutils/sys_eeprom_i2c.c
@@ -2,6 +2,8 @@
 #include "onie_tlvinfo.h"
 #include "sys_eeprom.h"
 #include "24cXX.h"
+#include <linux/fs.h>
+#include "i2c-dev.h"
 
 #if SYS_EEPROM_I2C_MEM_ADDR_BITS == 8
     #define EEPROM_TYPE EEPROM_TYPE_8BIT_ADDR
@@ -11,6 +13,37 @@
     #define EEPROM_TYPE EEPROM_TYPE_UNKNOWN
 #endif
 
+int eeprom_i2c_addr = OLD_SYS_EEPROM_I2C_ADDR;
+void correct_eeprom_i2c_addr()
+{
+    int r;
+    struct eeprom e;
+
+    if (eeprom_open(SYS_EEPROM_I2C_DEVICE, eeprom_i2c_addr,
+		EEPROM_TYPE, &e)) {
+	printf("WARNING: Cannot open EEPROM: %s: %d\n",
+		SYS_EEPROM_I2C_DEVICE, eeprom_i2c_addr);
+	eeprom_i2c_addr = SYS_EEPROM_I2C_ADDR;
+	return;
+    }
+    ioctl(e.fd, BLKFLSBUF);
+
+#ifdef QSFP_ROOT_MUX_ADDR
+    ioctl(e.fd, I2C_SLAVE, QSFP_ROOT_MUX_ADDR);
+    usleep(100);
+    i2c_smbus_write_byte_data(e.fd, 0, 0);
+    usleep(100);
+#endif
+
+    ioctl(e.fd, I2C_SLAVE, e.addr);
+    usleep(100);
+    r = i2c_smbus_write_byte(e.fd, 0);
+    eeprom_close(&e);
+    if (r < 0) {
+	eeprom_i2c_addr = SYS_EEPROM_I2C_ADDR;
+    }
+}
+
 /*
  * read_sys_eeprom - read the hwinfo from i2c EEPROM
  */
@@ -23,7 +56,7 @@ int read_sys_eeprom(void *eeprom_data, int offset, int len)
     int addr = SYS_EEPROM_OFFSET + offset;
 
     c = eeprom_data;
-    if (eeprom_open(SYS_EEPROM_I2C_DEVICE, SYS_EEPROM_I2C_ADDR,
+    if (eeprom_open(SYS_EEPROM_I2C_DEVICE, eeprom_i2c_addr,
 		    EEPROM_TYPE, &e)) {
 	printf("ERROR: Cannot open I2C device\n");
 	return -1;
@@ -49,7 +82,7 @@ int write_sys_eeprom(void *eeprom_data, int len)
 
     c = eeprom_data;
     for (i = 0; i < len; i++) {
-	if (eeprom_open(SYS_EEPROM_I2C_DEVICE, SYS_EEPROM_I2C_ADDR,
+	if (eeprom_open(SYS_EEPROM_I2C_DEVICE, eeprom_i2c_addr,
 			EEPROM_TYPE, &e)) {
 	    printf("ERROR: Cannot open I2C device\n");
 	    return -1;
